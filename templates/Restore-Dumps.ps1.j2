#!/snap/bin/powershell -Command
{{ ansible_managed | comment }}

$ErrorActionPreference = "Stop"

if ((/usr/local/bin/Get-PGIsInRecovery) -eq $true) {
    Write-Host -ForegroundColor Yellow "Postgresql is in restoring state"
    return;
}

{% if item.dumps is defined %}
{% for dump in item.dumps %}

/usr/local/bin/Restore-LatestDump.ps1 `
    -DestinationDB "{{ dump.destinationDB }}" `
    -BackupFolder "{{ dump.backupFolder }}" `
    -s3TempPath {{ dump.s3TempPath | default('$null') }} `
    -s3Bucket {{ dump.s3Bucket | default('$null') }} `
    -s3Profile {{ dump.s3Profile | default('$null') }} `
    -s3Endpoint {{ dump.s3Endpoint | default('$null') }} `
    -BackupFileFilter "{{ dump.backupFilter }}" `
    -QueryFile "{{ postgres_cron_template_script_path }}/{{ item.name }}_{{ dump.destinationDB }}.sql"
{% endfor %}
{% endif %}

# ==============================================

{% if item.copies is defined %}
{% for copy in item.copies %}

/usr/local/bin/Restore-DBFromTemplate.ps1 `
    -DestinationDB "{{ copy.destinationDB }}" `
    -SourceDB "{{ copy.sourceDB }}" `
    -QueryFile "{{ postgres_cron_template_script_path }}/copy_{{ item.name }}_{{ copy.destinationDB }}.sql"
{% endfor %}
{% endif %}