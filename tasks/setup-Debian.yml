---
- name: Ensure prerequisites libraries are installed.
  apt:
    name:
      - gnupg
      - apt-transport-https
      - wget
    update_cache: true
    state: present

- name: Ensure PostgreSQL Python libraries are installed.
  apt:
    name: "{{ postgresql_python_library }}"
    state: present

- name: Add Postgres repo to sources list
  ansible.builtin.deb822_repository:
    name: apt.postgresql.org
    types: [deb]
    uris: "http://apt.postgresql.org/pub/repos/apt/"
    suites: "{{ postgresql_debian_codename }}-pgdg"
    components: [main]
    signed_by: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
    enabled: true

# https://askubuntu.com/questions/1392214/is-there-a-way-to-install-postgresql-using-apt-get-without-it-running-initdb-aut
# Or create the directory /etc/postgresql/$VERSION before the postgresql-$VERSION package gets installed. The existence of this directory will make the post-installation script skip the creation of a default cluster.

- name: Ensure postgresql-common package is installed.
  apt:
    name: postgresql-common
    state: present
    update_cache: true

- name: Configure postgresql-common
  ini_file:
    path: /etc/postgresql-common/createcluster.conf
    section: ""
    option: create_main_cluster
    value: off
    state: present

- name: Ensure PostgreSQL packages are installed
  apt:
    name: "{{ postgresql_packages }}"
    state: present
    update_cache: true

- name: Ensure extra packages are installed
  apt:
    name: "{{ postgresql_packages_extra }}"
    state: present

- block:
  - name: Add key for TimescaleDB repo
    shell: wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | sudo gpg --yes --dearmor -o /etc/apt/trusted.gpg.d/timescaledb.gpg

  - name: Add TimescaleDB repo to sources list
    apt_repository: "repo='deb https://packagecloud.io/timescale/timescaledb/ubuntu/ {{ postgresql_debian_codename }} main' state=present"

  - name: TimescaleDB packages
    apt:
      name: "timescaledb-2-postgresql-{{ postgresql_timescaledb.version }}"
      state: present
      update_cache: true
    notify: restart postgresql
    when: postgresql_timescaledb.version is defined

  when: postgresql_timescaledb is defined

- block:
  - name: add ubuntugis ppa
    apt_repository: repo=ppa:ubuntugis/ubuntugis-unstable state=present

  - name: PostGIS packages
    apt:
      name:
        - "postgresql-{{ postgresql_version }}-postgis-{{ postgresql_postgis.version }}"
        - "postgresql-{{ postgresql_version }}-postgis-{{ postgresql_postgis.version }}-scripts"
      state: present
    when: postgresql_postgis.version is defined
    notify: restart postgresql

  when: postgresql_postgis is defined

- name: Configure locale aliases
  lineinfile:
    dest: /etc/locale.alias
    regexp: "^{{ item.alias }}\\s+.+$"
    line: "{{ item.alias }} {{ item.locale }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ postgresql_locale_aliases }}"
  when: postgresql_locale_aliases is defined
  register: locale_aliases_result

- name: Ensure all configured locales are present.
  locale_gen: "name={{ item }} state=present"
  with_items: "{{ postgresql_locales }}"
  register: locale_gen_result

- name: Register all localedefs
  shell: >
    localedef -f {{ item.charmap }} -i {{ item.inputfile }} {{ item.name }}
  with_items: "{{ postgresql_localedefs }}"
  when: postgresql_localedefs is defined

- name: Force-restart PostgreSQL after new locales are generated.
  service:
    name: "{{ postgresql_daemon_cluster }}"
    state: restarted
  when: locale_gen_result.changed or locale_aliases_result.changed
