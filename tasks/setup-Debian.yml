---
- name: Ensure PostgreSQL Python libraries are installed.
  apt:
    name: "{{ postgresql_python_library }}"
    state: present

- name: Add key for Postgres repo
  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present

- name: Add Postgres repo to sources list
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ jammy-pgdg main' state=present

# https://askubuntu.com/questions/1392214/is-there-a-way-to-install-postgresql-using-apt-get-without-it-running-initdb-aut
# Or create the directory /etc/postgresql/$VERSION before the postgresql-$VERSION package gets installed. The existence of this directory will make the post-installation script skip the creation of a default cluster.

- name: Ensure postgresql-common package is installed.
  apt:
    name: postgresql-common
    state: present
    update_cache: true

- name: Configure postgresql-common
  ini_file:
    path: /etc/postgresql-common/createcluster.conf
    section: ""
    option: create_main_cluster
    value: off
    state: present    
  
# - name: Ensure /etc/postgresql/$VERSION/main directory exists to disable cluster autoinit.
#   file:
#     path: "/etc/postgresql/{{ postgresql_version }}/main"    
#     state: directory

- name: Ensure PostgreSQL packages are installed
  apt:
    name: "{{ postgresql_packages }}"
    state: present
    update_cache: true

- name: add ubuntugis ppa
  apt_repository: repo=ppa:ubuntugis/ubuntugis-unstable state=present
  when: postgresql_postgis is defined

- name: PostGIS packages
  apt:
    name: 
      - "postgresql-{{ postgresql_version }}-postgis-{{ postgresql_postgis.version }}"
      - "postgresql-{{ postgresql_version }}-postgis-{{ postgresql_postgis.version }}-scripts"
    state: present
  when: postgresql_postgis is defined and postgresql_postgis.version is defined
  notify: restart postgresql

- name: Configure locale aliases
  lineinfile:
    dest: /etc/locale.alias
    regexp: "^{{ item.alias }}\\s+.+$"
    line: "{{ item.alias }} {{ item.locale }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ postgresql_locale_aliases }}"
  when: postgresql_locale_aliases is defined
  notify: restart postgresql

- name: Ensure all configured locales are present.
  locale_gen: "name={{ item }} state=present"
  with_items: "{{ postgresql_locales }}"
  register: locale_gen_result

- name: Force-restart PostgreSQL after new locales are generated.
  service:
    name: "{{ postgresql_daemon_cluster }}"
    state: restarted
  when: locale_gen_result.changed
