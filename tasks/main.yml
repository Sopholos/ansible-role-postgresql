---
# Variable configuration.
- import_tasks: variables.yml
  tags: [ init ]

- import_tasks: backup.yml
  tags: [ backup, cleanup ]

- import_tasks: backup_cron.yml
  when: postgresql_role == 'primary' or postgresql_role == 'primary_clone'
  tags: [ backup ]

- import_tasks: cleanup_cron.yml
  tags: [ cleanup ]
  when: postgresql_role == 'primary' or postgresql_role == 'primary_clone'

- import_tasks: sql_cron.yml
  tags: [ sql_cron ]
  when: postgresql_role == 'primary' or postgresql_role == 'primary_clone'

# Setup/install tasks.
- import_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'
  tags: [ install ]

- import_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'
  tags: [ install ]

- import_tasks: initialize.yml
  tags: [ install, config ]

- block:
  - import_tasks: cluster_copy_and_configure.yml
  - import_tasks: service.yml
  - import_tasks: make_primary.yml
  when: postgresql_role == 'primary_clone'
  tags: [ install, cluster, config ]

- block:
  - block:
    - import_tasks: cluster_initialize.yml
      when: not pgdata_dir_version.stat.exists
    - import_tasks: configure.yml
    - import_tasks: service.yml
    tags: [ install, cluster, config ]

  - import_tasks: users.yml
    tags: [ users ]
  - import_tasks: databases.yml
    tags: [ db ]
  - import_tasks: users_props.yml
    tags: [ users ]
  - import_tasks: dbscripts.yml
    tags: [ scripts ]

  when: postgresql_role == 'primary' or postgresql_role == 'primary_clone'

- block:
  - import_tasks: cluster_copy_and_configure.yml
  when: postgresql_role == 'secondary'
  tags: [ install, cluster, config ]

- import_tasks: configure_service.yml
  tags: [ config ]
