---
- name: Ensure {{ postgres_cron_template_script_path }} directory exists.
  file:
    path: "{{ postgres_cron_template_script_path }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700

- name: prepare | creates a sql scripts for cron restore
  include_tasks: restore_cron_sql.yml
  loop: "{{ postgres_restore.restore_sets }}"
  loop_control:
     loop_var: restore_set
  when:
    - postgres_restore.restore_sets is defined

- name: prepare | creates a powershell scripts for cron restore
  template:
    src: Restore-Dumps.ps1.j2
    dest: "{{ postgres_cron_template_script_path }}/{{ item.name }}.ps1"
    owner: "{{ postgresql_user }}"
    mode: '0755'
  loop: "{{ postgres_restore.restore_sets }}"
  when:
    - postgres_restore.restore_sets is defined

- name: set list of tasks restore cron
  set_fact:
    listrestore_for_cron_role: "{{ [ item.cron | combine ({'job': simple_job }) | combine ({'name': simple_name }) ] + listrestore_for_cron_role | default ([]) }}"
  vars:
    simple_job: "{{ postgres_cron_template_script_path }}/{{item.name}}.ps1"
    simple_name: "Restore - {{item.name}}"
  with_items: "{{ postgres_restore.restore_sets }}"
  when:
    - postgres_restore.restore_sets is defined
    - item.cron is defined

#import role from https://github.com/apavlov-agro/ansible_role_cron.git
- name: Crontab jobs
  import_role:
    name: ../../../linux/role_cron
  vars:
    cron_tasks: "{{ listrestore_for_cron_role }}"
  when:
    - postgres_restore.restore_sets is defined

