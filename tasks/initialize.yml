---
- name: Set PostgreSQL environment variables.
  template:
    src: postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  notify: restart postgresql

- name: Ensure PostgreSQL data directory exists.
  file:
    path: "{{ postgresql_data_dir }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: Ensure PostgreSQL WAL directory exists.
  file:
    path: "{{ postgresql_wal_dir }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700
  when: postgresql_wal_dir is defined

- set_fact:
    cluster_init_command: "pg_createcluster -d {{ postgresql_data_dir }} {{ postgresql_version }} main"

- set_fact:
    cluster_init_command: "{{ cluster_init_command }} -locale={{ postgresql_cluster_init_locale }}"
  when: postgresql_cluster_init_locale is defined

- set_fact:
    cluster_init_command: "{{ cluster_init_command }} --lc-messages={{ postgresql_cluster_init_lc_messages }}"
  when: postgresql_cluster_init_lc_messages is defined

- set_fact:
    cluster_init_command: "{{ cluster_init_command }} -- -X {{ postgresql_wal_dir }}"
  when: postgresql_wal_dir is defined

- name: Ensure PostgreSQL database is initialized.
  command: "{{ cluster_init_command }}"    
  when: not pgdata_dir_version.stat.exists
  vars:
    ansible_ssh_pipelining: true

- name: Ensure PostgreSQL log directory exists.
  file:
    path: "{{ postgresql_effective_log_dir }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700
