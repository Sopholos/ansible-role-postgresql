---
- name: Configure global settings.
  lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: '^(?P<option>#?{{ item.option }})[\t ]*=[\t ]*((?P<value>[^\n#]+)|(?P<value2>.*?)(?P<comment>[\t ]+#.+))$'
    line: '{{ item.option }} = {{ item.value }}\g<comment>'
    state: "{{ item.state | default('present') }}"
    backrefs: yes
    mode: 0644
  with_items: "{{ postgresql_global_config_options }}"
  notify: restart postgresql

- name: Add password to .pgpass for postgresql_user
  lineinfile:
    line: "{{ postgresql_primary.host }}:{{ postgresql_primary.port }}:replication:{{ postgresql_primary.user }}:{{ postgresql_primary.password }}"
    regexp: "{{ postgresql_primary.host }}:{{ postgresql_primary.port }}:replication:{{ postgresql_primary.user }}"
    dest: "{{ postgresql_home_dir }}/.pgpass"
    create: yes
    mode: 0600
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"

- name: Configure host based authentication (if entries are configured).
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0600
  notify: restart postgresql
  when: postgresql_hba_entries | length > 0

- name: Ensure PostgreSQL unix socket dirs exist.
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: "{{ postgresql_unix_socket_directories_mode }}"
  with_items: "{{ postgresql_unix_socket_directories }}"
