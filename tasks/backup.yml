---
- name: prepare | 7z
  apt:
    name: p7zip-full
    state: present
  when: ansible_os_family == 'Debian'

- name: prepare | 7z
  ansible.builtin.package:
    name: p7zip
  when: ansible_os_family == 'RedHat'

- name: prepare | powershell
  import_tasks: prepare-powershell.yaml

- name: prepare | postgres-client
  import_tasks: prepare-postgres-client.yaml
  when: postgresql_backup_install_client is defined and postgresql_backup_install_client

- name: prepare | s3
  import_tasks: backup_s3.yml
  when: postgresql_backup_s3 is defined

- name: prepare | copy PS scripts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: u+rwx,g=rx,o=rx
  with_items:
    - { src: postgre_wal_read.ps1, dest: /usr/local/bin/postgre_wal_read.ps1 }
    - { src: postgre_wal_read.sh, dest: /usr/local/bin/postgre_wal_read.sh }
    - { src: postgre_wal_write.ps1, dest: /usr/local/bin/postgre_wal_write.ps1 }
    - { src: postgre_wal_write.sh, dest: /usr/local/bin/postgre_wal_write.sh }
    - { src: postgre_backup_cluster.ps1, dest: /usr/local/bin/postgre_backup_cluster.ps1 }
    - { src: postgre_dump_db.ps1, dest: /usr/local/bin/postgre_dump_db.ps1 }
    - { src: Remove-Backup.ps1, dest: /usr/local/bin/Remove-Backup.ps1 }
    - { src: Invoke-PgSQL.ps1, dest: /usr/local/bin/Invoke-PgSQL.ps1 }
    - { src: Invoke-PgSQLFile.ps1, dest: /usr/local/bin/Invoke-PgSQLFile.ps1 }
    - { src: Get-PGIsInRecovery.ps1, dest: /usr/local/bin/Get-PGIsInRecovery.ps1 }
    - { src: Restore-DBFromTemplate.ps1, dest: /usr/local/bin/Restore-DBFromTemplate.ps1 }
    - { src: Restore-LatestDump.ps1, dest: /usr/local/bin/Restore-LatestDump.ps1 }
